//
//Copyright (c) 2025 Diagrid Inc.
//Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: proto/queue/queue.proto

package queue

import (
	api "github.com/diagridio/go-etcd-cron/api"
	stored "github.com/diagridio/go-etcd-cron/internal/api/stored"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ControlEvent is a queue event which should be executed in turn of the queue
// control loop. Used for all job events.
type ControlEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// action is the typed action which should be executed by the queue control
	// loop.
	//
	// Types that are assignable to Action:
	//
	//	*ControlEvent_Informed
	//	*ControlEvent_ExecuteRequest
	//	*ControlEvent_ExecuteResponse
	//	*ControlEvent_DeliverablePrefixes
	//	*ControlEvent_UndeliverablePrefixes
	//	*ControlEvent_CloseJob
	//	*ControlEvent_Close
	Action isControlEvent_Action `protobuf_oneof:"action"`
}

func (x *ControlEvent) Reset() {
	*x = ControlEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlEvent) ProtoMessage() {}

func (x *ControlEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlEvent.ProtoReflect.Descriptor instead.
func (*ControlEvent) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{0}
}

func (m *ControlEvent) GetAction() isControlEvent_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ControlEvent) GetInformed() *Informed {
	if x, ok := x.GetAction().(*ControlEvent_Informed); ok {
		return x.Informed
	}
	return nil
}

func (x *ControlEvent) GetExecuteRequest() *ExecuteRequest {
	if x, ok := x.GetAction().(*ControlEvent_ExecuteRequest); ok {
		return x.ExecuteRequest
	}
	return nil
}

func (x *ControlEvent) GetExecuteResponse() *ExecuteResponse {
	if x, ok := x.GetAction().(*ControlEvent_ExecuteResponse); ok {
		return x.ExecuteResponse
	}
	return nil
}

func (x *ControlEvent) GetDeliverablePrefixes() *DeliverablePrefixes {
	if x, ok := x.GetAction().(*ControlEvent_DeliverablePrefixes); ok {
		return x.DeliverablePrefixes
	}
	return nil
}

func (x *ControlEvent) GetUndeliverablePrefixes() *UndeliverablePrefixes {
	if x, ok := x.GetAction().(*ControlEvent_UndeliverablePrefixes); ok {
		return x.UndeliverablePrefixes
	}
	return nil
}

func (x *ControlEvent) GetCloseJob() *CloseJob {
	if x, ok := x.GetAction().(*ControlEvent_CloseJob); ok {
		return x.CloseJob
	}
	return nil
}

func (x *ControlEvent) GetClose() *Close {
	if x, ok := x.GetAction().(*ControlEvent_Close); ok {
		return x.Close
	}
	return nil
}

type isControlEvent_Action interface {
	isControlEvent_Action()
}

type ControlEvent_Informed struct {
	Informed *Informed `protobuf:"bytes,1,opt,name=informed,proto3,oneof"`
}

type ControlEvent_ExecuteRequest struct {
	ExecuteRequest *ExecuteRequest `protobuf:"bytes,2,opt,name=execute_request,json=executeRequest,proto3,oneof"`
}

type ControlEvent_ExecuteResponse struct {
	ExecuteResponse *ExecuteResponse `protobuf:"bytes,3,opt,name=execute_response,json=executeResponse,proto3,oneof"`
}

type ControlEvent_DeliverablePrefixes struct {
	DeliverablePrefixes *DeliverablePrefixes `protobuf:"bytes,4,opt,name=deliverable_prefixes,json=deliverablePrefixes,proto3,oneof"`
}

type ControlEvent_UndeliverablePrefixes struct {
	UndeliverablePrefixes *UndeliverablePrefixes `protobuf:"bytes,5,opt,name=undeliverable_prefixes,json=undeliverablePrefixes,proto3,oneof"`
}

type ControlEvent_CloseJob struct {
	CloseJob *CloseJob `protobuf:"bytes,6,opt,name=close_job,json=closeJob,proto3,oneof"`
}

type ControlEvent_Close struct {
	Close *Close `protobuf:"bytes,7,opt,name=close,proto3,oneof"`
}

func (*ControlEvent_Informed) isControlEvent_Action() {}

func (*ControlEvent_ExecuteRequest) isControlEvent_Action() {}

func (*ControlEvent_ExecuteResponse) isControlEvent_Action() {}

func (*ControlEvent_DeliverablePrefixes) isControlEvent_Action() {}

func (*ControlEvent_UndeliverablePrefixes) isControlEvent_Action() {}

func (*ControlEvent_CloseJob) isControlEvent_Action() {}

func (*ControlEvent_Close) isControlEvent_Action() {}

// JobEvent is queue events that should be processed by the inner Job event
// loop. These events are performed on a per-job handler.
type JobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job_name is the name of the job associated with this event.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// action is the typed action which should be executed by the job event.
	Action *JobAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *JobEvent) Reset() {
	*x = JobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEvent) ProtoMessage() {}

func (x *JobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEvent.ProtoReflect.Descriptor instead.
func (*JobEvent) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{1}
}

func (x *JobEvent) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobEvent) GetAction() *JobAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type JobAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// action is the typed action which should be executed by the queue control
	// loop.
	//
	// Types that are assignable to Action:
	//
	//	*JobAction_Informed
	//	*JobAction_ExecuteRequest
	//	*JobAction_ExecuteResponse
	//	*JobAction_Deliverable
	//	*JobAction_CloseJob
	//	*JobAction_Close
	Action isJobAction_Action `protobuf_oneof:"action"`
}

func (x *JobAction) Reset() {
	*x = JobAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAction) ProtoMessage() {}

func (x *JobAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAction.ProtoReflect.Descriptor instead.
func (*JobAction) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{2}
}

func (m *JobAction) GetAction() isJobAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *JobAction) GetInformed() *Informed {
	if x, ok := x.GetAction().(*JobAction_Informed); ok {
		return x.Informed
	}
	return nil
}

func (x *JobAction) GetExecuteRequest() *ExecuteRequest {
	if x, ok := x.GetAction().(*JobAction_ExecuteRequest); ok {
		return x.ExecuteRequest
	}
	return nil
}

func (x *JobAction) GetExecuteResponse() *ExecuteResponse {
	if x, ok := x.GetAction().(*JobAction_ExecuteResponse); ok {
		return x.ExecuteResponse
	}
	return nil
}

func (x *JobAction) GetDeliverable() *DeliverableJob {
	if x, ok := x.GetAction().(*JobAction_Deliverable); ok {
		return x.Deliverable
	}
	return nil
}

func (x *JobAction) GetCloseJob() *CloseJob {
	if x, ok := x.GetAction().(*JobAction_CloseJob); ok {
		return x.CloseJob
	}
	return nil
}

func (x *JobAction) GetClose() *Close {
	if x, ok := x.GetAction().(*JobAction_Close); ok {
		return x.Close
	}
	return nil
}

type isJobAction_Action interface {
	isJobAction_Action()
}

type JobAction_Informed struct {
	Informed *Informed `protobuf:"bytes,1,opt,name=informed,proto3,oneof"`
}

type JobAction_ExecuteRequest struct {
	ExecuteRequest *ExecuteRequest `protobuf:"bytes,2,opt,name=execute_request,json=executeRequest,proto3,oneof"`
}

type JobAction_ExecuteResponse struct {
	ExecuteResponse *ExecuteResponse `protobuf:"bytes,3,opt,name=execute_response,json=executeResponse,proto3,oneof"`
}

type JobAction_Deliverable struct {
	Deliverable *DeliverableJob `protobuf:"bytes,4,opt,name=deliverable,proto3,oneof"`
}

type JobAction_CloseJob struct {
	CloseJob *CloseJob `protobuf:"bytes,5,opt,name=close_job,json=closeJob,proto3,oneof"`
}

type JobAction_Close struct {
	Close *Close `protobuf:"bytes,6,opt,name=close,proto3,oneof"`
}

func (*JobAction_Informed) isJobAction_Action() {}

func (*JobAction_ExecuteRequest) isJobAction_Action() {}

func (*JobAction_ExecuteResponse) isJobAction_Action() {}

func (*JobAction_Deliverable) isJobAction_Action() {}

func (*JobAction_CloseJob) isJobAction_Action() {}

func (*JobAction_Close) isJobAction_Action() {}

// Informed is the event that is sent to the queue when a job is added or
// deleted from the storage informer.
type Informed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job is the stored job object.
	Job *stored.Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	// name is the name of the job object.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// is_put is true if the event is a put event, false if it is a delete event.
	IsPut bool `protobuf:"varint,3,opt,name=is_put,json=isPut,proto3" json:"is_put,omitempty"`
	// job_mod_revision is the key revision of the job object in the storage.
	JobModRevision int64 `protobuf:"varint,4,opt,name=job_mod_revision,json=jobModRevision,proto3" json:"job_mod_revision,omitempty"`
}

func (x *Informed) Reset() {
	*x = Informed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Informed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Informed) ProtoMessage() {}

func (x *Informed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Informed.ProtoReflect.Descriptor instead.
func (*Informed) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{3}
}

func (x *Informed) GetJob() *stored.Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Informed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Informed) GetIsPut() bool {
	if x != nil {
		return x.IsPut
	}
	return false
}

func (x *Informed) GetJobModRevision() int64 {
	if x != nil {
		return x.JobModRevision
	}
	return 0
}

// ExecuteRequest is the queue event to execute a job.
type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job_name is the name of the job to execute.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// counter_key is the storage key of the job counter to execute.
	CounterKey string `protobuf:"bytes,2,opt,name=counter_key,json=counterKey,proto3" json:"counter_key,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *ExecuteRequest) GetCounterKey() string {
	if x != nil {
		return x.CounterKey
	}
	return ""
}

// ExecuteResponse is to report the result of a job execution.
type ExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job_name is the name of the job to execute.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// counter_key is the storage key of the job counter to execute.
	CounterKey string `protobuf:"bytes,2,opt,name=counter_key,json=counterKey,proto3" json:"counter_key,omitempty"`
	// uid tracks the id of this execution to account for mid-execution
	// cancellations.
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// result is the trigger result of executing this job counter.
	Result *api.TriggerResponse `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteResponse) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *ExecuteResponse) GetCounterKey() string {
	if x != nil {
		return x.CounterKey
	}
	return ""
}

func (x *ExecuteResponse) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExecuteResponse) GetResult() *api.TriggerResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

// DeliverablePrefixes is a queue event which instructs that the given prefixes
// can now be executed by the queue executor.
type DeliverablePrefixes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// prefixes is the set of prefixes that can now be executed.
	Prefixes []string `protobuf:"bytes,1,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
}

func (x *DeliverablePrefixes) Reset() {
	*x = DeliverablePrefixes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverablePrefixes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverablePrefixes) ProtoMessage() {}

func (x *DeliverablePrefixes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverablePrefixes.ProtoReflect.Descriptor instead.
func (*DeliverablePrefixes) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{6}
}

func (x *DeliverablePrefixes) GetPrefixes() []string {
	if x != nil {
		return x.Prefixes
	}
	return nil
}

// UndeliverablePrefixes is a queue event which instructs that the previously
// given prefixes can no longer be executed by the queue executor.
type UndeliverablePrefixes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// prefixes is the set of prefixes that can no longer be executed.
	Prefixes []string `protobuf:"bytes,1,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
}

func (x *UndeliverablePrefixes) Reset() {
	*x = UndeliverablePrefixes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeliverablePrefixes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeliverablePrefixes) ProtoMessage() {}

func (x *UndeliverablePrefixes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeliverablePrefixes.ProtoReflect.Descriptor instead.
func (*UndeliverablePrefixes) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{7}
}

func (x *UndeliverablePrefixes) GetPrefixes() []string {
	if x != nil {
		return x.Prefixes
	}
	return nil
}

// Close is a queue event which instructs that the queue executor should
// close.
type Close struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Close) Reset() {
	*x = Close{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Close) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Close) ProtoMessage() {}

func (x *Close) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Close.ProtoReflect.Descriptor instead.
func (*Close) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{8}
}

// CloseJob is a queue event which instructs the given job name has been closed
// and the associated resources should be released.
type CloseJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job_name is the job whose resources should be closed.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
}

func (x *CloseJob) Reset() {
	*x = CloseJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseJob) ProtoMessage() {}

func (x *CloseJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseJob.ProtoReflect.Descriptor instead.
func (*CloseJob) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{9}
}

func (x *CloseJob) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

// DeliverableJob is a job event which instructs that the given job can now be
// executed by the queue executor.
type DeliverableJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeliverableJob) Reset() {
	*x = DeliverableJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_queue_queue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverableJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverableJob) ProtoMessage() {}

func (x *DeliverableJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_queue_queue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverableJob.ProtoReflect.Descriptor instead.
func (*DeliverableJob) Descriptor() ([]byte, []int) {
	return file_proto_queue_queue_proto_rawDescGZIP(), []int{10}
}

var File_proto_queue_queue_proto protoreflect.FileDescriptor

var file_proto_queue_queue_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x2f, 0x6a,
	0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcc, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65,
	0x64, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x16, 0x75, 0x6e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x75, 0x6e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4a, 0x6f, 0x62,
	0x12, 0x24, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4f, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x4a, 0x6f, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xdc, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x40,
	0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4a, 0x6f,
	0x62, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4a, 0x6f, 0x62,
	0x12, 0x24, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x7e, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x50, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x6f,
	0x64, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x4c, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x8d,
	0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65,
	0x73, 0x22, 0x33, 0x0a, 0x15, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22,
	0x25, 0x0a, 0x08, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x6a,
	0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x61, 0x67, 0x72, 0x69, 0x64, 0x69, 0x6f,
	0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x74, 0x63, 0x64, 0x2d, 0x63, 0x72, 0x6f, 0x6e, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_queue_queue_proto_rawDescOnce sync.Once
	file_proto_queue_queue_proto_rawDescData = file_proto_queue_queue_proto_rawDesc
)

func file_proto_queue_queue_proto_rawDescGZIP() []byte {
	file_proto_queue_queue_proto_rawDescOnce.Do(func() {
		file_proto_queue_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_queue_queue_proto_rawDescData)
	})
	return file_proto_queue_queue_proto_rawDescData
}

var file_proto_queue_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_queue_queue_proto_goTypes = []interface{}{
	(*ControlEvent)(nil),          // 0: queue.ControlEvent
	(*JobEvent)(nil),              // 1: queue.JobEvent
	(*JobAction)(nil),             // 2: queue.JobAction
	(*Informed)(nil),              // 3: queue.Informed
	(*ExecuteRequest)(nil),        // 4: queue.ExecuteRequest
	(*ExecuteResponse)(nil),       // 5: queue.ExecuteResponse
	(*DeliverablePrefixes)(nil),   // 6: queue.DeliverablePrefixes
	(*UndeliverablePrefixes)(nil), // 7: queue.UndeliverablePrefixes
	(*Close)(nil),                 // 8: queue.Close
	(*CloseJob)(nil),              // 9: queue.CloseJob
	(*DeliverableJob)(nil),        // 10: queue.DeliverableJob
	(*stored.Job)(nil),            // 11: stored.Job
	(*api.TriggerResponse)(nil),   // 12: api.TriggerResponse
}
var file_proto_queue_queue_proto_depIdxs = []int32{
	3,  // 0: queue.ControlEvent.informed:type_name -> queue.Informed
	4,  // 1: queue.ControlEvent.execute_request:type_name -> queue.ExecuteRequest
	5,  // 2: queue.ControlEvent.execute_response:type_name -> queue.ExecuteResponse
	6,  // 3: queue.ControlEvent.deliverable_prefixes:type_name -> queue.DeliverablePrefixes
	7,  // 4: queue.ControlEvent.undeliverable_prefixes:type_name -> queue.UndeliverablePrefixes
	9,  // 5: queue.ControlEvent.close_job:type_name -> queue.CloseJob
	8,  // 6: queue.ControlEvent.close:type_name -> queue.Close
	2,  // 7: queue.JobEvent.action:type_name -> queue.JobAction
	3,  // 8: queue.JobAction.informed:type_name -> queue.Informed
	4,  // 9: queue.JobAction.execute_request:type_name -> queue.ExecuteRequest
	5,  // 10: queue.JobAction.execute_response:type_name -> queue.ExecuteResponse
	10, // 11: queue.JobAction.deliverable:type_name -> queue.DeliverableJob
	9,  // 12: queue.JobAction.close_job:type_name -> queue.CloseJob
	8,  // 13: queue.JobAction.close:type_name -> queue.Close
	11, // 14: queue.Informed.job:type_name -> stored.Job
	12, // 15: queue.ExecuteResponse.result:type_name -> api.TriggerResponse
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_queue_queue_proto_init() }
func file_proto_queue_queue_proto_init() {
	if File_proto_queue_queue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_queue_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Informed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverablePrefixes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeliverablePrefixes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Close); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_queue_queue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverableJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_queue_queue_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ControlEvent_Informed)(nil),
		(*ControlEvent_ExecuteRequest)(nil),
		(*ControlEvent_ExecuteResponse)(nil),
		(*ControlEvent_DeliverablePrefixes)(nil),
		(*ControlEvent_UndeliverablePrefixes)(nil),
		(*ControlEvent_CloseJob)(nil),
		(*ControlEvent_Close)(nil),
	}
	file_proto_queue_queue_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*JobAction_Informed)(nil),
		(*JobAction_ExecuteRequest)(nil),
		(*JobAction_ExecuteResponse)(nil),
		(*JobAction_Deliverable)(nil),
		(*JobAction_CloseJob)(nil),
		(*JobAction_Close)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_queue_queue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_queue_queue_proto_goTypes,
		DependencyIndexes: file_proto_queue_queue_proto_depIdxs,
		MessageInfos:      file_proto_queue_queue_proto_msgTypes,
	}.Build()
	File_proto_queue_queue_proto = out.File
	file_proto_queue_queue_proto_rawDesc = nil
	file_proto_queue_queue_proto_goTypes = nil
	file_proto_queue_queue_proto_depIdxs = nil
}
